---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authelia
  namespace: authelia
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.authelia.com
      chart: authelia
      version: 0.7.6
      sourceRef:
        kind: HelmRepository
        name: authelia-charts
        namespace: flux-system
      interval: 5m

  values:
    domain: ${SECRET_DOMAIN}

    service:
      annotations:
        prometheus.io/probe: "true"
        prometheus.io/protocol: "http"

    ingress:
      enabled: true
      className: nginx

      tls:
        enabled: true
        secret: authetlia-tls
      annotations:
        external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
        external-dns/is-public: "true"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/tls-acme: "true"
      subdomain: login
        
    pod:
      # Must be Deployment, DaemonSet, or StatefulSet.
      kind: DaemonSet

      env:
        - name: TZ
          value: America/New_York

      extraVolumeMounts:
        - name: config-custom
          mountPath: /config
      extraVolumes:
        - name: config-custom
          configMap:
            name: authelia-config-custom
            items:
              - key: users_database.yml
                path: users_database.yml

      resources:
        requests:
          cpu: 500m
          memory: 1500Mi
        limits: {}

    ##
    ## Authelia Config Map Generator
    ##
    configMap:
      enabled: true
      server:
        read_buffer_size: 8192
        write_buffer_size: 8192
      theme: dark
      authentication_backend:
        disable_reset_password: true
        ldap:
          enabled: false
        file:
          enabled: true
          password:
            algorithm: argon2id

      access_control:
        ## Default policy can either be 'bypass', 'one_factor', 'two_factor' or 'deny'. It is the policy applied to any
        ## resource if there is no policy to be applied to the user.
        default_policy: two_factor

      session:
        redis:
          enabled: true
          enabledSecret: true
          host: redis-master.data.svc.cluster.local

      storage:
        postgres:
          enabled: true
          host: postgresql-kube.data.svc.cluster.local

      notifier:
        smtp:
          enabled: true
          enabledSecret: true
          host: smtp.gmail.com
          port: 587
          username: ${SECRET_EMAIL}
          sender: ${SECRET_EMAIL}
          identifier: Testing

    secret:
      storage:
        key: STORAGE_PASSWORD
        value: "${SECRET_POSTGRESQL_KUBE_POSTGRES_PASSWORD}"
        filename: STORAGE_PASSWORD
      redis:
        key: REDIS_PASSWORD
        value: "${SECRET_REDIS_PASSWORD}"
        filename: REDIS_PASSWORD
      smtp:
        key: SMTP_PASSWORD
        value: "${SECRET_AUTHELIA_SMTP_PASSWORD}"
        filename: SMTP_PASSWORD
    persistence:
      enabled: true
      storageClass: "longhorn"
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: Ingress
              name: authelia
            patch:
              - op: add
                path: /spec/ingressClassName
                value: nginx