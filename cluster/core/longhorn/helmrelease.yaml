---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  releaseName: longhorn
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.3.0
      sourceRef:
        kind: HelmRepository
        name: longhorn-charts
        namespace: flux-system
      interval: 5m

  values:

    image:
      longhorn:
        engine:
          repository: longhornio/longhorn-engine
          tag: v1.3.0
        manager:
          repository: longhornio/longhorn-manager
          tag: v1.2.0
        ui:
          repository: longhornio/longhorn-ui
          tag: v1.3.0
        instanceManager:
          repository: longhornio/longhorn-instance-manager
          tag: v1_20220611
        shareManager:
          repository: longhornio/longhorn-share-manager
          tag: v1_20220531
        backingImageManager:
          repository: longhornio/backing-image-manager
          tag: v3_20220609

      csi:
        attacher:
          repository: longhornio/csi-attacher
          tag: v3.4.0
        provisioner:
          repository: longhornio/csi-provisioner
          tag: v2.1.2
        nodeDriverRegistrar:
          repository: longhornio/csi-node-driver-registrar
          tag: v2.5.0
        resizer:
          repository: longhornio/csi-resizer
          tag: v1.2.0
        snapshotter:
          repository: longhornio/csi-snapshotter
          tag: v3.0.3
      pullPolicy: IfNotPresent

    defaultSettings:
      defaultReplicaCount: 3
      backupTarget: ${NFS_BACKUP}
      # Below requires that nodes used for storage have the label
      # node.longhorn.io/create-default-disk=true
      createDefaultDiskLabeledNodes: true
      storageOverProvisioningPercentage: 150
      storageMinimalAvailablePercentage: 50
      guaranteedEngineManagerCPU: 20
      guaranteedReplicaManagerCPU: 20
      defaultDataPath: /var/lib/longhorn
      concurrentAutomaticEngineUpgradePerNodeLimit: 3
      defaultLonghornStaticStorageClass: longhorn

    ingress:
      enabled: true
      ingressClassName: nginx
      host: longhorn.${INTERNAL_DOMAIN}
      tls: true
      tlsSecret: longhorn.local-tls
