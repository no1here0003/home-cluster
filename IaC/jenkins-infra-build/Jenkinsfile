pipeline {
    agent any

    parameters {
        string(name: 'environment', defaultValue: 'default', description: 'Workspace/environment file to use for deployment')
        string(name: 'version', defaultValue: '', description: 'Version variable to pass to Terraform')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    }
    
    environment {
        TF_IN_AUTOMATION      = '1'
    }

    stages {
        stage('Build vms1') {
            steps {
                dir('./IaC/terraform') {
                    sh "terraform init"
                    sh "terraform workspace select vms1"
                    sh "terraform plan -input=false -out vms1.tfplan"
                    sh "terraform show -no-color vms1.tfplan > vms1.tfplan.txt"
                    sh "terraform show -no-color vms1.tfplan"
                    sh 'terraform apply -input=false vms1.tfplan'
                }
            }
        }
        stage('Build vms2') {
            steps {
                dir('./IaC/terraform') {
                    sh "terraform init"
                    sh "terraform workspace select vms2"
                    sh "terraform plan -input=false -out vms2.tfplan"
                    sh "terraform show -no-color vms2.tfplan > vms2.tfplan.txt"
                    sh "terraform show -no-color vms2.tfplan"
                    sh 'terraform apply -input=false vms2.tfplan'
                }
            }
        }
        stage('Build vms3') {
            steps {
                dir('./IaC/terraform') {
                    sh "terraform init"
                    sh "terraform workspace select vms3"
                    sh "terraform plan -input=false -out vms3.tfplan"
                    sh "terraform show -no-color vms3.tfplan > vms3.tfplan.txt"
                    sh "terraform show -no-color vms3.tfplan"
                    sh 'terraform apply -input=false vms3.tfplan'
                }
            }
        }
        stage('Build vms4') {
            steps {
                dir('./IaC/terraform') {
                    sh "terraform init"
                    sh "terraform workspace select vms4"
                    sh "terraform plan -input=false -out vms4.tfplan"
                    sh "terraform show -no-color vms4.tfplan > vms4.tfplan.txt"
                    sh "terraform show -no-color vms4.tfplan"
                    sh 'terraform apply -input=false vms4.tfplan'
                }
            }
        }
        stage('Build vms5') {
            steps {
                dir('./IaC/terraform') {
                    sh "terraform init"
                    sh "terraform workspace select vms5"
                    sh "terraform plan -input=false -out vms5.tfplan"
                    sh "terraform show -no-color vms5.tfplan > vms5.tfplan.txt"
                    sh "terraform show -no-color vms5.tfplan"
                    sh 'terraform apply -input=false vms5.tfplan'
                }
            }
        }
        stage('Build vms6') {
            steps {
                dir('./IaC/terraform') {
                    sh "terraform init"
                    sh "terraform workspace select vms6"
                    sh "terraform plan -input=false -out vms6.tfplan"
                    sh "terraform show -no-color vms6.tfplan > vms6.tfplan.txt"
                    sh "terraform show -no-color vms6.tfplan"
                    sh 'terraform apply -input=false vms6.tfplan'
                }
            }
        }
    }
}